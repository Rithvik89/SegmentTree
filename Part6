struct segtree
{
  ll size;
  vector<ll>v;
  void init(ll n)
  {
    size=1;
    while(size<n){size*=2;}
    v.assign(2*size,0ll);
  }
  void set(ll i,ll x,ll node,ll lx,ll rx)
  {
    if(lx==rx)
    {
      v[node]=x;
    }
    else
    {
      ll m=(lx+rx)/2,temp=0;
      if(i<=m)
      {
        set(i,x,2*node+1,lx,m);
      }
      else
      {
        set(i,x,2*node+2,m+1,rx);
      }
      v[node]=max(v[2*node+1],v[2*node+2]);
    }
  }
  void set(ll i,ll x)
  {
    set(i,x,0ll,0ll,size-1);
  }
  ll min_index_atleast(ll node,ll k,ll lx,ll rx)
  {
    if(lx==rx)
    {
      return lx;
    }
    else
    {
      ll m=(lx+rx)/2;
      if(v[2*node+1]>=k)
      {
        return min_index_atleast(2*node+1,k,lx,m);
      }
      else
      {
        return min_index_atleast(2*node+2,k,m+1,rx);
      }
    }
  }
  ll min_index_atleast(ll k)
  {
    if(k>v[0])
    {
      return -1;
    }
    else
    {
    return min_index_atleast(0ll,k,0ll,size-1);
    }
  }
};
